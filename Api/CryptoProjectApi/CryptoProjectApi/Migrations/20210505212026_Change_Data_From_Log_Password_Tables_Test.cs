using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace CryptoProjectApi.Migrations
{
    public partial class Change_Data_From_Log_Password_Tables_Test : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 141, 162, 42, 186, 115, 164, 107, 8, 191, 19, 170, 121, 75, 26, 23, 212, 232, 199, 108, 166, 220, 22, 27, 181, 58, 130, 211, 238, 35, 198, 47, 189, 69, 75, 210, 203, 18, 57, 200, 164, 93, 184, 46, 247, 215, 39, 84, 210, 183, 192, 184, 89, 230, 67, 40, 36, 179, 69, 90, 203, 78, 63, 115, 207 }, new byte[] { 230, 192, 148, 139, 35, 239, 178, 110, 23, 107, 155, 77, 59, 210, 194, 224, 115, 55, 47, 86, 186, 127, 121, 108, 30, 53, 15, 224, 148, 176, 49, 74, 122, 137, 205, 80, 57, 239, 0, 235, 213, 128, 104, 253, 170, 127, 16, 60, 115, 243, 124, 156, 233, 191, 215, 193, 31, 108, 21, 147, 172, 13, 78, 221, 203, 24, 205, 159, 195, 213, 180, 195, 179, 206, 240, 253, 183, 22, 201, 102, 201, 220, 91, 106, 16, 136, 75, 247, 220, 117, 246, 219, 0, 219, 182, 188, 201, 139, 72, 159, 114, 232, 32, 235, 51, 180, 140, 153, 108, 179, 203, 111, 106, 77, 162, 120, 62, 85, 200, 239, 6, 144, 80, 191, 69, 132, 125, 67 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 234, 237, 187, 96, 50, 13, 73, 27, 118, 22, 89, 1, 158, 2, 210, 239, 176, 139, 59, 96, 71, 122, 60, 136, 139, 132, 65, 180, 105, 255, 10, 136, 106, 1, 25, 236, 214, 31, 94, 253, 78, 18, 7, 18, 47, 215, 246, 103, 167, 78, 155, 4, 182, 168, 199, 35, 199, 98, 106, 17, 96, 91, 205, 73 }, new byte[] { 37, 172, 186, 36, 41, 134, 120, 65, 94, 193, 163, 120, 144, 32, 92, 126, 50, 174, 171, 254, 31, 104, 7, 127, 238, 75, 210, 205, 125, 224, 147, 173, 56, 8, 127, 101, 19, 188, 152, 142, 215, 44, 161, 164, 182, 33, 140, 177, 212, 21, 33, 96, 70, 57, 165, 246, 69, 41, 171, 232, 107, 225, 88, 37, 69, 97, 17, 86, 216, 36, 197, 63, 222, 206, 73, 102, 160, 247, 29, 122, 161, 124, 249, 150, 98, 77, 210, 133, 214, 172, 80, 70, 109, 47, 239, 212, 228, 183, 95, 115, 115, 150, 245, 249, 53, 196, 172, 130, 133, 241, 6, 233, 6, 99, 23, 61, 238, 9, 194, 181, 197, 156, 50, 10, 50, 182, 254, 207 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 99, 93, 114, 117, 131, 11, 70, 153, 209, 250, 153, 172, 95, 124, 238, 72, 250, 53, 43, 234, 180, 247, 3, 24, 18, 23, 139, 98, 236, 142, 167, 44, 225, 193, 80, 208, 216, 23, 187, 192, 204, 223, 69, 30, 43, 253, 23, 105, 29, 47, 42, 95, 242, 245, 142, 216, 111, 252, 195, 30, 163, 155, 51, 126 }, new byte[] { 127, 18, 59, 61, 83, 254, 148, 164, 0, 39, 179, 146, 84, 91, 217, 163, 28, 121, 244, 100, 56, 134, 48, 148, 2, 255, 203, 31, 236, 48, 0, 56, 105, 58, 213, 55, 213, 157, 48, 79, 200, 170, 98, 92, 186, 122, 124, 9, 73, 88, 74, 25, 240, 76, 129, 173, 62, 161, 103, 46, 13, 163, 241, 72, 68, 57, 35, 158, 199, 56, 77, 90, 148, 44, 224, 105, 71, 180, 102, 1, 78, 195, 145, 34, 117, 226, 122, 211, 82, 23, 253, 139, 234, 126, 147, 46, 48, 174, 86, 192, 177, 18, 233, 146, 204, 7, 143, 74, 152, 71, 162, 219, 232, 237, 17, 85, 116, 7, 30, 113, 236, 43, 253, 193, 236, 24, 202, 236 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 136, 55, 89, 106, 207, 113, 129, 35, 6, 107, 34, 99, 221, 165, 170, 187, 160, 224, 245, 236, 138, 142, 246, 70, 156, 115, 13, 116, 181, 107, 22, 106, 96, 153, 176, 12, 231, 110, 106, 30, 175, 1, 6, 253, 45, 204, 255, 188, 233, 196, 50, 14, 185, 109, 181, 199, 142, 233, 222, 208, 13, 39, 59, 154 }, new byte[] { 121, 212, 201, 197, 54, 216, 94, 49, 112, 248, 86, 147, 90, 102, 128, 186, 240, 36, 4, 233, 186, 178, 219, 56, 139, 60, 53, 3, 25, 126, 6, 95, 176, 106, 48, 167, 22, 6, 192, 230, 194, 57, 16, 164, 120, 152, 210, 160, 125, 148, 1, 222, 167, 114, 124, 174, 6, 130, 229, 181, 195, 6, 220, 10, 228, 6, 58, 88, 156, 10, 206, 175, 238, 120, 148, 180, 254, 203, 36, 25, 1, 188, 153, 2, 220, 85, 214, 208, 195, 84, 253, 135, 35, 211, 251, 224, 37, 224, 177, 255, 106, 79, 19, 105, 167, 137, 245, 17, 33, 166, 151, 163, 170, 235, 239, 39, 22, 65, 66, 147, 137, 141, 164, 247, 3, 167, 179, 111 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 118, 32, 20, 218, 9, 189, 196, 58, 0, 187, 250, 22, 194, 88, 229, 101, 127, 78, 195, 138, 18, 33, 69, 156, 222, 194, 35, 23, 93, 253, 246, 99, 163, 152, 131, 120, 186, 221, 109, 231, 99, 236, 116, 201, 54, 222, 223, 160, 61, 68, 100, 251, 37, 160, 159, 184, 36, 70, 237, 249, 40, 180, 68, 133 }, new byte[] { 17, 193, 29, 27, 249, 185, 92, 192, 105, 207, 110, 217, 103, 14, 73, 205, 154, 158, 69, 143, 255, 204, 34, 90, 131, 201, 85, 4, 9, 84, 27, 107, 132, 106, 184, 103, 188, 47, 159, 184, 200, 119, 24, 127, 212, 29, 168, 157, 27, 40, 200, 65, 211, 218, 112, 231, 5, 57, 99, 214, 254, 87, 68, 83, 153, 159, 236, 11, 186, 8, 81, 26, 190, 188, 26, 107, 237, 149, 44, 169, 122, 188, 201, 192, 150, 155, 41, 233, 71, 155, 197, 156, 214, 92, 65, 78, 12, 48, 11, 217, 40, 237, 76, 108, 90, 167, 122, 48, 205, 187, 211, 65, 2, 34, 204, 147, 77, 142, 156, 155, 53, 239, 218, 50, 235, 125, 135, 21 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 1,
                column: "Hash",
                value: new byte[] { 107, 121, 131, 240, 137, 193, 158, 119 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 2,
                column: "Hash",
                value: new byte[] { 107, 121, 131, 240, 137, 193, 158, 119 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 3,
                column: "Hash",
                value: new byte[] { 107, 121, 131, 240, 137, 193, 158, 119 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 4,
                column: "Hash",
                value: new byte[] { 107, 121, 131, 240, 137, 193, 158, 119 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 5,
                column: "Hash",
                value: new byte[] { 107, 121, 131, 240, 137, 193, 158, 119 });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 109, 6, 174, 236, 228, 62, 171, 84, 79, 195, 125, 72, 97, 198, 240, 76, 60, 61, 250, 151, 81, 20, 179, 185, 91, 158, 4, 33, 15, 66, 56, 95, 226, 51, 227, 254, 195, 43, 136, 31, 254, 47, 145, 24, 31, 42, 221, 207, 224, 3, 183, 229, 211, 26, 147, 237, 221, 84, 187, 145, 80, 0, 16, 237 }, new byte[] { 75, 55, 57, 60, 26, 63, 218, 45, 193, 241, 137, 113, 46, 72, 166, 70, 222, 27, 135, 173, 214, 185, 225, 27, 245, 71, 22, 30, 12, 96, 50, 156, 53, 94, 206, 224, 21, 126, 64, 238, 254, 77, 49, 233, 234, 170, 231, 179, 42, 80, 206, 160, 79, 97, 168, 157, 87, 186, 0, 226, 16, 1, 189, 48, 154, 194, 195, 128, 35, 187, 4, 16, 245, 81, 202, 12, 58, 98, 214, 109, 112, 27, 74, 252, 39, 11, 233, 107, 183, 239, 112, 71, 243, 3, 133, 132, 72, 231, 101, 84, 233, 104, 217, 243, 217, 6, 14, 65, 246, 94, 137, 225, 92, 106, 123, 1, 194, 3, 248, 5, 239, 226, 153, 138, 237, 108, 80, 49 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 152, 82, 82, 43, 55, 49, 14, 90, 3, 247, 73, 225, 252, 206, 18, 223, 75, 143, 253, 2, 119, 155, 81, 241, 240, 76, 91, 107, 20, 212, 112, 100, 88, 154, 196, 222, 131, 24, 160, 124, 56, 225, 57, 184, 136, 41, 68, 212, 62, 117, 230, 52, 18, 169, 75, 246, 93, 48, 174, 26, 230, 111, 62, 215 }, new byte[] { 126, 34, 179, 197, 52, 200, 186, 142, 59, 231, 183, 123, 151, 249, 70, 76, 116, 196, 77, 210, 80, 95, 135, 196, 132, 240, 227, 40, 135, 134, 219, 144, 123, 188, 213, 85, 191, 17, 41, 128, 10, 251, 121, 17, 49, 217, 55, 45, 221, 181, 108, 106, 250, 40, 60, 10, 98, 30, 18, 28, 192, 117, 118, 202, 154, 62, 93, 27, 100, 129, 123, 20, 145, 201, 133, 183, 126, 83, 249, 121, 201, 215, 208, 211, 123, 44, 69, 87, 212, 239, 216, 45, 54, 201, 141, 68, 181, 91, 177, 7, 238, 187, 177, 191, 94, 27, 202, 41, 255, 67, 41, 136, 182, 116, 167, 43, 246, 151, 230, 177, 177, 33, 133, 91, 61, 112, 248, 75 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 85, 41, 240, 107, 97, 116, 33, 119, 142, 235, 173, 179, 164, 128, 48, 201, 234, 102, 149, 91, 90, 100, 50, 117, 88, 213, 88, 147, 155, 159, 154, 110, 87, 136, 173, 91, 46, 72, 27, 32, 80, 6, 189, 147, 59, 239, 51, 17, 142, 212, 183, 240, 254, 117, 195, 118, 93, 248, 239, 163, 108, 110, 72, 235 }, new byte[] { 194, 42, 56, 186, 233, 52, 94, 140, 213, 198, 180, 217, 135, 120, 127, 2, 53, 38, 137, 98, 46, 38, 158, 75, 49, 201, 229, 126, 110, 85, 211, 198, 86, 68, 181, 232, 124, 185, 154, 247, 100, 130, 26, 5, 103, 235, 75, 37, 194, 79, 167, 73, 144, 156, 61, 4, 141, 81, 205, 8, 113, 51, 116, 53, 97, 7, 190, 91, 36, 175, 130, 197, 137, 248, 1, 123, 27, 59, 247, 250, 67, 162, 244, 73, 213, 72, 57, 39, 247, 77, 98, 1, 21, 131, 1, 22, 119, 6, 103, 215, 31, 147, 24, 138, 113, 138, 198, 27, 42, 218, 56, 107, 186, 168, 251, 76, 27, 206, 77, 175, 10, 162, 90, 213, 101, 16, 47, 124 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 168, 65, 109, 106, 191, 64, 163, 211, 121, 183, 148, 144, 98, 7, 63, 232, 31, 198, 67, 109, 106, 62, 128, 137, 170, 119, 180, 132, 245, 161, 131, 44, 251, 221, 90, 231, 5, 118, 33, 107, 45, 254, 21, 176, 253, 119, 129, 199, 138, 10, 132, 34, 198, 180, 144, 142, 239, 76, 179, 15, 234, 211, 248, 95 }, new byte[] { 75, 197, 252, 153, 111, 251, 204, 17, 223, 156, 169, 79, 11, 38, 150, 98, 104, 8, 132, 21, 107, 89, 79, 129, 8, 56, 135, 212, 57, 78, 29, 5, 40, 14, 124, 147, 199, 215, 21, 26, 128, 110, 239, 171, 140, 189, 193, 190, 29, 34, 165, 216, 99, 105, 18, 26, 128, 38, 99, 184, 254, 112, 184, 28, 205, 96, 204, 179, 165, 233, 84, 252, 77, 210, 231, 194, 130, 131, 135, 214, 191, 131, 35, 75, 6, 149, 13, 41, 47, 169, 44, 72, 90, 240, 240, 227, 30, 224, 230, 221, 52, 65, 64, 237, 214, 216, 29, 28, 85, 246, 67, 8, 160, 217, 9, 234, 237, 28, 45, 207, 21, 206, 74, 20, 61, 213, 242, 10 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 5,
                columns: new[] { "Hash", "Salt" },
                values: new object[] { new byte[] { 123, 220, 176, 173, 0, 145, 74, 197, 106, 90, 24, 69, 191, 231, 77, 65, 50, 232, 119, 153, 51, 115, 6, 63, 210, 1, 23, 169, 221, 224, 70, 218, 16, 180, 54, 3, 133, 17, 140, 90, 100, 105, 61, 38, 30, 63, 144, 85, 216, 205, 35, 138, 111, 71, 105, 229, 198, 36, 6, 15, 169, 85, 117, 197 }, new byte[] { 145, 126, 33, 121, 136, 125, 4, 6, 196, 84, 157, 187, 33, 141, 80, 177, 234, 202, 196, 36, 151, 142, 25, 217, 30, 199, 17, 162, 223, 222, 190, 173, 78, 199, 8, 81, 169, 62, 181, 141, 196, 114, 14, 135, 202, 22, 200, 79, 12, 91, 132, 2, 241, 144, 94, 228, 198, 29, 145, 178, 4, 9, 218, 151, 119, 248, 163, 46, 52, 158, 93, 121, 204, 19, 47, 13, 138, 15, 113, 148, 42, 100, 230, 13, 195, 106, 108, 95, 212, 61, 183, 52, 30, 165, 42, 174, 180, 68, 220, 199, 75, 191, 164, 140, 170, 162, 215, 14, 33, 192, 98, 65, 207, 23, 229, 82, 126, 193, 243, 237, 83, 206, 205, 65, 131, 71, 191, 191 } });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 1,
                column: "Hash",
                value: new byte[] { 255, 23, 127, 218, 174, 100, 215, 61 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 2,
                column: "Hash",
                value: new byte[] { 255, 23, 127, 218, 174, 100, 215, 61 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 3,
                column: "Hash",
                value: new byte[] { 255, 23, 127, 218, 174, 100, 215, 61 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 4,
                column: "Hash",
                value: new byte[] { 255, 23, 127, 218, 174, 100, 215, 61 });

            migrationBuilder.UpdateData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 5,
                column: "Hash",
                value: new byte[] { 255, 23, 127, 218, 174, 100, 215, 61 });
        }
    }
}
