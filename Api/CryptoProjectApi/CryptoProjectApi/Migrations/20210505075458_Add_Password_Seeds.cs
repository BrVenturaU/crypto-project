using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace CryptoProjectApi.Migrations
{
    public partial class Add_Password_Seeds : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.InsertData(
                table: "PasswordLogsWithSalt",
                columns: new[] { "Id", "Hash", "Salt" },
                values: new object[,]
                {
                    { 1, new byte[] { 37, 86, 167, 186, 58, 22, 61, 140, 244, 3, 141, 9, 89, 212, 93, 136, 42, 79, 41, 142, 212, 3, 33, 21, 202, 145, 195, 165, 175, 54, 163, 14, 90, 26, 25, 75, 49, 22, 80, 169, 206, 141, 186, 110, 128, 85, 187, 174, 155, 27, 7, 224, 76, 138, 72, 5, 76, 201, 132, 97, 68, 141, 146, 208 }, new byte[] { 150, 8, 132, 3, 14, 214, 139, 210, 253, 126, 166, 110, 10, 171, 34, 109, 78, 201, 20, 115, 186, 38, 179, 34, 22, 225, 98, 159, 77, 143, 112, 92, 139, 161, 95, 108, 249, 234, 247, 248, 163, 55, 160, 120, 148, 104, 135, 98, 235, 45, 36, 233, 237, 146, 124, 11, 208, 77, 142, 62, 188, 245, 219, 63, 50, 152, 105, 48, 8, 185, 141, 26, 64, 134, 187, 17, 137, 39, 173, 101, 162, 127, 18, 231, 245, 103, 154, 139, 45, 145, 196, 134, 244, 11, 150, 156, 202, 117, 30, 45, 220, 1, 91, 79, 30, 60, 102, 127, 81, 160, 132, 76, 254, 183, 148, 241, 21, 153, 92, 220, 76, 252, 176, 217, 197, 152, 132, 228 } },
                    { 2, new byte[] { 18, 229, 164, 204, 4, 190, 163, 35, 127, 126, 167, 248, 165, 132, 49, 122, 153, 86, 80, 174, 236, 14, 233, 151, 139, 195, 226, 85, 28, 170, 43, 243, 144, 227, 252, 166, 184, 1, 127, 197, 225, 208, 159, 135, 17, 176, 14, 77, 23, 234, 98, 28, 233, 226, 69, 21, 194, 13, 2, 124, 17, 89, 227, 225 }, new byte[] { 181, 75, 100, 47, 124, 3, 130, 176, 241, 210, 197, 120, 87, 233, 69, 175, 80, 55, 93, 8, 85, 81, 64, 78, 127, 87, 39, 93, 149, 31, 30, 187, 156, 130, 125, 125, 161, 144, 89, 148, 189, 142, 54, 174, 67, 126, 217, 140, 183, 165, 43, 134, 98, 29, 153, 128, 46, 183, 74, 246, 200, 101, 0, 182, 160, 130, 38, 76, 191, 185, 9, 73, 52, 85, 244, 58, 111, 113, 223, 100, 56, 37, 69, 155, 109, 141, 119, 207, 93, 99, 241, 240, 101, 205, 18, 165, 244, 55, 221, 208, 62, 138, 227, 36, 6, 197, 32, 137, 16, 222, 231, 195, 57, 135, 43, 154, 150, 161, 98, 141, 194, 33, 56, 201, 26, 134, 48, 173 } },
                    { 3, new byte[] { 199, 139, 213, 57, 12, 165, 238, 68, 157, 31, 119, 172, 20, 14, 116, 250, 70, 254, 131, 208, 152, 135, 134, 94, 125, 88, 226, 13, 163, 172, 157, 156, 176, 90, 178, 156, 92, 126, 75, 185, 81, 68, 56, 174, 37, 139, 225, 90, 147, 148, 127, 185, 251, 249, 169, 251, 46, 2, 45, 105, 126, 64, 62, 52 }, new byte[] { 81, 230, 33, 147, 116, 5, 164, 43, 238, 26, 70, 35, 206, 105, 39, 113, 43, 192, 253, 140, 95, 1, 6, 192, 168, 40, 7, 205, 44, 134, 145, 114, 207, 119, 237, 118, 19, 191, 139, 84, 30, 35, 125, 234, 216, 255, 30, 34, 118, 121, 217, 154, 237, 53, 93, 154, 176, 77, 147, 57, 241, 42, 109, 225, 248, 3, 33, 71, 176, 166, 68, 178, 203, 137, 33, 124, 235, 241, 246, 58, 229, 140, 8, 134, 69, 169, 206, 227, 99, 44, 102, 45, 76, 246, 128, 70, 132, 43, 98, 247, 104, 244, 250, 37, 176, 16, 77, 166, 229, 241, 166, 210, 250, 214, 134, 170, 247, 67, 166, 48, 242, 186, 4, 126, 236, 45, 138, 98 } },
                    { 4, new byte[] { 52, 216, 84, 197, 125, 56, 97, 62, 62, 79, 189, 245, 115, 224, 112, 29, 170, 123, 231, 150, 68, 123, 210, 124, 71, 92, 56, 111, 113, 210, 165, 9, 213, 75, 92, 22, 38, 217, 171, 237, 65, 158, 2, 210, 139, 151, 106, 116, 69, 76, 51, 122, 57, 56, 247, 175, 222, 235, 124, 59, 86, 75, 94, 5 }, new byte[] { 221, 148, 62, 51, 104, 56, 31, 157, 158, 17, 135, 168, 177, 62, 133, 6, 168, 94, 173, 22, 68, 230, 31, 194, 40, 189, 85, 226, 243, 52, 44, 239, 170, 244, 151, 73, 163, 32, 49, 63, 22, 61, 35, 121, 119, 227, 188, 120, 229, 84, 70, 183, 101, 244, 84, 120, 134, 239, 205, 59, 52, 229, 2, 46, 111, 156, 144, 233, 173, 212, 182, 76, 168, 62, 236, 252, 150, 145, 77, 93, 12, 93, 203, 6, 117, 138, 36, 145, 54, 160, 33, 237, 44, 180, 78, 136, 95, 22, 138, 252, 71, 86, 233, 10, 34, 172, 49, 227, 121, 19, 142, 88, 155, 138, 92, 156, 162, 122, 195, 40, 93, 194, 129, 1, 155, 72, 238, 18 } },
                    { 5, new byte[] { 172, 245, 11, 136, 111, 118, 183, 70, 12, 112, 228, 193, 198, 108, 165, 156, 252, 173, 108, 241, 24, 114, 254, 154, 235, 250, 253, 77, 150, 172, 30, 134, 245, 245, 190, 64, 23, 203, 154, 178, 189, 204, 244, 253, 13, 230, 229, 92, 55, 88, 169, 203, 84, 97, 185, 65, 219, 219, 215, 182, 114, 245, 149, 234 }, new byte[] { 19, 103, 234, 255, 196, 38, 195, 8, 248, 238, 202, 119, 162, 139, 129, 214, 225, 1, 92, 26, 204, 67, 198, 183, 234, 145, 139, 163, 185, 171, 66, 112, 244, 186, 82, 177, 65, 147, 125, 34, 83, 121, 216, 169, 5, 159, 215, 83, 124, 151, 190, 25, 144, 175, 207, 175, 163, 162, 197, 152, 135, 93, 41, 64, 160, 161, 236, 234, 111, 200, 53, 1, 166, 183, 231, 74, 242, 229, 232, 29, 4, 5, 131, 226, 130, 74, 86, 23, 171, 200, 66, 76, 82, 217, 40, 15, 129, 119, 145, 50, 206, 104, 43, 57, 77, 113, 118, 146, 59, 180, 214, 247, 30, 52, 252, 152, 223, 212, 168, 90, 121, 31, 150, 96, 161, 229, 180, 2 } }
                });

            migrationBuilder.InsertData(
                table: "PasswordLogsWithoutSalt",
                columns: new[] { "Id", "Hash" },
                values: new object[,]
                {
                    { 1, new byte[] { 37, 86, 167, 186, 58, 22, 61, 140, 244, 3, 141, 9, 89, 212, 93, 136, 42, 79, 41, 142, 212, 3, 33, 21, 202, 145, 195, 165, 175, 54, 163, 14, 90, 26, 25, 75, 49, 22, 80, 169, 206, 141, 186, 110, 128, 85, 187, 174, 155, 27, 7, 224, 76, 138, 72, 5, 76, 201, 132, 97, 68, 141, 146, 208 } },
                    { 2, new byte[] { 18, 229, 164, 204, 4, 190, 163, 35, 127, 126, 167, 248, 165, 132, 49, 122, 153, 86, 80, 174, 236, 14, 233, 151, 139, 195, 226, 85, 28, 170, 43, 243, 144, 227, 252, 166, 184, 1, 127, 197, 225, 208, 159, 135, 17, 176, 14, 77, 23, 234, 98, 28, 233, 226, 69, 21, 194, 13, 2, 124, 17, 89, 227, 225 } },
                    { 3, new byte[] { 199, 139, 213, 57, 12, 165, 238, 68, 157, 31, 119, 172, 20, 14, 116, 250, 70, 254, 131, 208, 152, 135, 134, 94, 125, 88, 226, 13, 163, 172, 157, 156, 176, 90, 178, 156, 92, 126, 75, 185, 81, 68, 56, 174, 37, 139, 225, 90, 147, 148, 127, 185, 251, 249, 169, 251, 46, 2, 45, 105, 126, 64, 62, 52 } },
                    { 4, new byte[] { 52, 216, 84, 197, 125, 56, 97, 62, 62, 79, 189, 245, 115, 224, 112, 29, 170, 123, 231, 150, 68, 123, 210, 124, 71, 92, 56, 111, 113, 210, 165, 9, 213, 75, 92, 22, 38, 217, 171, 237, 65, 158, 2, 210, 139, 151, 106, 116, 69, 76, 51, 122, 57, 56, 247, 175, 222, 235, 124, 59, 86, 75, 94, 5 } },
                    { 5, new byte[] { 172, 245, 11, 136, 111, 118, 183, 70, 12, 112, 228, 193, 198, 108, 165, 156, 252, 173, 108, 241, 24, 114, 254, 154, 235, 250, 253, 77, 150, 172, 30, 134, 245, 245, 190, 64, 23, 203, 154, 178, 189, 204, 244, 253, 13, 230, 229, 92, 55, 88, 169, 203, 84, 97, 185, 65, 219, 219, 215, 182, 114, 245, 149, 234 } }
                });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 4);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithSalt",
                keyColumn: "Id",
                keyValue: 5);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 1);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 2);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 3);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 4);

            migrationBuilder.DeleteData(
                table: "PasswordLogsWithoutSalt",
                keyColumn: "Id",
                keyValue: 5);
        }
    }
}
